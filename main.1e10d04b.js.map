{"version":3,"sources":["scripts/main.js"],"names":["TABLE_FIELDS","title","type","input","name","validate","value","pushNotification","length","sort","a","b","localeCompare","select","options","formatForView","number","numberAsString","String","parts","part","slice","unshift","join","formatForEdit","replace","numA","sortTableColumns","item","head","table","document","querySelector","sortedOrder","dataset","sorted","colIndex","cellIndex","tBody","tBodies","rows","field","sortDirection","cellA","cells","textContent","cellB","querySelectorAll","forEach","row","appendChild","selectTableRow","classList","contains","active","remove","add","addForm","form","createElement","className","wrapper","innerText","fieldElement","createFormField","button","after","addEventListener","event","preventDefault","formData","FormData","every","get","addEmployeeToTable","reset","Object","assign","qa","option","posTop","posRight","description","messageContainer","titleElement","descriptionElement","body","style","top","right","setTimeout","lastRow","lastElementChild","newRow","cloneNode","i","content","addCellEditInput","cell","cellValue","cellInput","focus","code","blur","isValid","newValue","innerHTML","window","target","closest"],"mappings":"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","file":"main.1e10d04b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// GLOBAL TABLE FIELDS ARRAY\nconst TABLE_FIELDS = [\n  {\n    title: 'Name',\n    type: 'input',\n    input: {\n      name: 'name',\n      type: 'text',\n    },\n    validate(value) {\n      if (typeof value === 'undefined' || value === '') {\n        pushNotification(\n          10, 10,\n          'Form data error',\n          'Employee\\'s name is required!',\n          'error',\n        );\n\n        return false;\n      }\n\n      if (value.length < 4) {\n        pushNotification(\n          10, 10,\n          'Form data error',\n          'Employee\\'s name needs to be at least 4 characters long!',\n          'error',\n        );\n\n        return false;\n      }\n\n      return true;\n    },\n    sort(a, b) {\n      return a.localeCompare(b);\n    },\n  },\n  {\n    title: 'Position',\n    type: 'input',\n    input: {\n      name: 'position',\n      type: 'text',\n    },\n    validate(value) {\n      if (typeof value === 'undefined' || value === '') {\n        pushNotification(\n          10, 10,\n          'Form data error',\n          'Employee\\'s position is required!',\n          'error',\n        );\n\n        return false;\n      }\n\n      return true;\n    },\n    sort(a, b) {\n      return a.localeCompare(b);\n    },\n  },\n  {\n    title: 'Office',\n    type: 'select',\n    select: {\n      name: 'office',\n    },\n    options: [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ],\n    sort(a, b) {\n      return a.localeCompare(b);\n    },\n  },\n  {\n    title: 'Age',\n    type: 'input',\n    input: {\n      name: 'age',\n      type: 'number',\n    },\n    validate(value) {\n      if (typeof value === 'undefined' || value === '') {\n        pushNotification(\n          10, 10,\n          'Form data error',\n          'Employee\\'s age is required!',\n          'error',\n        );\n\n        return false;\n      }\n\n      if (value < 18 || value > 90) {\n        pushNotification(\n          10, 10,\n          'Form data error',\n          'Employee\\'s age needs to be in range between 18 and 90!',\n          'error',\n        );\n\n        return false;\n      }\n\n      return true;\n    },\n    sort(a, b) {\n      return a - b;\n    },\n  },\n  {\n    title: 'Salary',\n    type: 'input',\n    input: {\n      name: 'salary',\n      type: 'number',\n    },\n    formatForView(number) {\n      let numberAsString = String(number);\n      const parts = [];\n\n      do {\n        const part = numberAsString.slice(-3);\n\n        parts.unshift(part);\n        numberAsString = numberAsString.slice(0, -3);\n      } while (numberAsString);\n\n      return '$' + parts.join();\n    },\n    formatForEdit(value) {\n      return String(value).replace(/\\D/g, '');\n    },\n    validate(number) {\n      if (number <= 0) {\n        pushNotification(\n          10, 10,\n          'Form data error',\n          'Employee\\'s salary needs to be larger than 0!',\n          'error',\n        );\n\n        return false;\n      }\n\n      return true;\n    },\n    sort(a, b) {\n      const numA = +String(a).replace(/\\D/g, '');\n      const numB = +String(b).replace(/\\D/g, '');\n\n      return numA - numB;\n    },\n  },\n];\n\n// INITIALIZATION\nwindow.addEventListener('load', () => {\n  addForm();\n\n  // LISTEN TO DOUBLECLICK\n  // eslint-disable-next-line no-shadow\n  document.addEventListener('dblclick', event => {\n    const item = event.target;\n    const cell = item.closest('td');\n\n    if (!cell) {\n      return;\n    }\n\n    addCellEditInput(cell);\n  });\n\n  // LISTEN TO CLICK\n  // eslint-disable-next-line no-shadow\n  document.addEventListener('click', event => {\n    const item = event.target;\n    const head = item.closest('thead');\n\n    if (head) {\n      sortTableColumns(item, head);\n\n      return;\n    }\n\n    const row = item.closest('tr');\n\n    if (row && !row.closest('tfoot')) {\n      selectTableRow(row);\n    }\n  });\n});\n\n// SORTING COLUMNS\nfunction sortTableColumns(item, head) {\n  const table = document.querySelector('table');\n  const sortedOrder = item.dataset.sorted;\n  const colIndex = item.cellIndex;\n  const tBody = table.tBodies[0];\n  const rows = [...tBody.rows];\n  const field = TABLE_FIELDS[colIndex];\n\n  rows.sort((a, b) => {\n    const sortDirection = !sortedOrder || sortedOrder === 'desc' ? 1 : -1;\n    const cellA = a.cells[colIndex].textContent;\n    const cellB = b.cells[colIndex].textContent;\n\n    item.dataset.sorted = sortDirection === 1\n      ? 'asc'\n      : 'desc';\n\n    return field.sort\n      ? field.sort(cellA, cellB) * sortDirection\n      : cellA.localeCompare(cellB) * sortDirection;\n  });\n\n  head.querySelectorAll('[data-sorted]').forEach(title => {\n    if (title.cellIndex === colIndex) {\n      return;\n    }\n\n    delete title.dataset.sorted;\n  });\n\n  rows.forEach(row => tBody.appendChild(row));\n}\n\n// SELECT ROW\nfunction selectTableRow(row) {\n  const table = document.querySelector('table');\n\n  if (row.classList.contains('active')) {\n    return;\n  }\n\n  table\n    .querySelectorAll('tr.active')\n    .forEach(active => active.classList.remove('active'));\n\n  row.classList.add('active');\n}\n\n// ADD FORM\nfunction addForm() {\n  const table = document.querySelector('table');\n  const form = document.createElement('form');\n\n  form.className = 'new-employee-form';\n\n  TABLE_FIELDS.forEach(field => {\n    const wrapper = document.createElement('label');\n\n    wrapper.innerText = field.title;\n\n    const fieldElement = createFormField(field);\n\n    wrapper.appendChild(fieldElement);\n\n    form.appendChild(wrapper);\n  });\n\n  const button = document.createElement('button');\n\n  button.innerText = 'Save to table';\n  form.appendChild(button);\n  table.after(form);\n\n  // eslint-disable-next-line no-shadow\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n\n    const formData = new FormData(form);\n\n    const isValidData = TABLE_FIELDS.every(({ type, ...field }) => {\n      if (!field.validate) {\n        return true;\n      }\n\n      return field.validate(formData.get(field[type].name));\n    });\n\n    if (!isValidData) {\n      return;\n    }\n\n    pushNotification(\n      10, 10,\n      'Added to table',\n      `${formData.get('name')} is successfully added to table`,\n      'success',\n    );\n\n    addEmployeeToTable(formData);\n    form.reset();\n  });\n}\n\n// CREATE FIELD ELEMENT\nfunction createFormField(field) {\n  switch (field.type) {\n    case 'input':\n      const input = document.createElement('input');\n\n      Object.assign(input, field.input);\n      input.dataset.qa = field.input.name;\n\n      return input;\n\n    case 'select':\n      const select = document.createElement('select');\n\n      Object.assign(select, field.select);\n      select.dataset.qa = field.select.name;\n\n      field.options.forEach(value => {\n        const option = document.createElement('option');\n\n        option.value = value;\n        option.textContent = value;\n        select.appendChild(option);\n      });\n\n      return select;\n  }\n}\n\n// NOTIFICATIONS\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const messageContainer = document.createElement('div');\n  const titleElement = document.createElement('h2');\n  const descriptionElement = document.createElement('p');\n\n  messageContainer.className = `notification ${type}`;\n  messageContainer.dataset.qa = `notification`;\n\n  titleElement.className = 'title';\n  titleElement.textContent = title;\n\n  descriptionElement.textContent = description;\n\n  messageContainer.appendChild(titleElement);\n  messageContainer.appendChild(descriptionElement);\n  document.body.appendChild(messageContainer);\n\n  messageContainer.style.top = `${posTop}px`;\n  messageContainer.style.right = `${posRight}px`;\n\n  setTimeout(() => {\n    messageContainer.remove();\n  }, 2000);\n};\n\n// ADD NEW EMPLOYEE\nfunction addEmployeeToTable(formData) {\n  const table = document.querySelector('table');\n  const tBody = table.tBodies[0];\n  const lastRow = tBody.lastElementChild;\n  const newRow = lastRow.cloneNode(true);\n\n  TABLE_FIELDS.forEach(({ type, ...field }, i) => {\n    const content = formData.get(field[type].name);\n\n    newRow.cells[i].textContent = field.formatForView\n      ? field.formatForView(content)\n      : content;\n  });\n\n  lastRow.after(newRow);\n}\n\n// EDIT CELL\nfunction addCellEditInput(cell) {\n  const cellValue = cell.textContent;\n  const cellIndex = cell.cellIndex;\n  const field = TABLE_FIELDS[cellIndex];\n  const cellInput = createFormField(field);\n\n  cellInput.className = 'cell-input';\n\n  cellInput.value = field.formatForEdit\n    ? field.formatForEdit(cellValue)\n    : cellValue;\n  delete cellInput.dataset.qa;\n\n  cell.textContent = '';\n  cell.appendChild(cellInput);\n  cellInput.focus();\n\n  // eslint-disable-next-line no-shadow\n  cellInput.addEventListener('keyup', event => {\n    if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n      cellInput.blur();\n    }\n  });\n\n  cellInput.addEventListener('blur', () => {\n    const isValid = field.validate\n      ? field.validate(cellInput.value)\n      : true;\n\n    const newValue = field.formatForView\n      ? field.formatForView(cellInput.value)\n      : cellInput.value;\n\n    cell.innerHTML = '';\n\n    cell.textContent = newValue !== '' && isValid\n      ? newValue\n      : cellValue;\n  });\n}\n"]}